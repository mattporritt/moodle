define("message_popup/notification_popover_push",["exports","core/ajax"],(function(_exports,_ajax){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=(obj=_ajax)&&obj.__esModule?obj:{default:obj};const arrayBufferToBase64=buffer=>{window.console.log(buffer);let binary="";const bytes=new Uint8Array(buffer);for(let i=0;i<bytes.byteLength;i++)binary+=String.fromCharCode(bytes[i]);return window.btoa(binary)};_exports.init=async vapidpublickey=>{if("granted"!==await window.Notification.requestPermission())return void window.console.error("Notification permission denied.");const workerRegistration=await(async()=>{let registration;try{const workeruri="/message/output/popup/amd/build/notification_service_worker.min.js";registration=await navigator.serviceWorker.register(workeruri)}catch(error){if("NotAllowedError"!==error.name)throw error;window.console.error("Permission for Push API has been denied")}return registration})();let subscription=await workerRegistration.pushManager.getSubscription();if(!subscription){const options={userVisibleOnly:!0,applicationServerKey:(base64String=>{const base64=(base64String+"=".repeat((4-base64String.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),rawData=window.atob(base64),outputArray=new Uint8Array(rawData.length);for(let i=0;i<rawData.length;++i)outputArray[i]=rawData.charCodeAt(i);return outputArray})(vapidpublickey)};subscription=await workerRegistration.pushManager.subscribe(options),await(async subscription=>{const request={methodname:"message_popup_register_push_subscription",args:{endpoint:subscription.endpoint,expirationtime:subscription.expirationTime,auth:arrayBufferToBase64(subscription.getKey("auth")),p256dh:arrayBufferToBase64(subscription.getKey("p256dh"))}};return _ajax.default.call([request])[0]})(subscription).catch((error=>{throw subscription.unsubscribe(),error}))}}}));

//# sourceMappingURL=notification_popover_push.min.js.map