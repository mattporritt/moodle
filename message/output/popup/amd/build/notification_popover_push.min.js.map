{"version":3,"file":"notification_popover_push.min.js","sources":["../src/notification_popover_push.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const init = async() => {\n    window.console.log('push lib loaded');\n\n    try {\n        // Register the service worker\n        const workeruri = '/message/output/popup/amd/build/notification_service_worker.min.js';\n        const registration = await navigator.serviceWorker.register(workeruri);\n\n        // Attempt to retrieve existing push subscription\n        let subscription = await registration.pushManager.getSubscription();\n\n        // If no existing subscription, subscribe\n        if (!subscription) {\n            subscription = await registration.pushManager.subscribe({userVisibleOnly: true});\n        }\n\n    } catch (error) {\n        if (error.name === 'NotAllowedError') {\n            // Handle the specific case where permission was denied.\n            window.console.error('Permission for Push API has been denied');\n        } else {\n            // General error handling\n            window.console.error('Service Worker registration or push subscription failed:', error);\n        }\n    }\n};\n"],"names":["async","window","console","log","workeruri","registration","navigator","serviceWorker","register","subscription","pushManager","getSubscription","subscribe","userVisibleOnly","error","name"],"mappings":"4KAeoBA,UAChBC,OAAOC,QAAQC,IAAI,6BAITC,UAAY,qEACZC,mBAAqBC,UAAUC,cAAcC,SAASJ,eAGxDK,mBAAqBJ,aAAaK,YAAYC,kBAG7CF,eACDA,mBAAqBJ,aAAaK,YAAYE,UAAU,CAACC,iBAAiB,KAGhF,MAAOC,OACc,oBAAfA,MAAMC,KAENd,OAAOC,QAAQY,MAAM,2CAGrBb,OAAOC,QAAQY,MAAM,2DAA4DA"}