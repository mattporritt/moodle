define("tiny_aiplacement/generatetext",["exports","core/modal_events","tiny_aiplacement/textmodal","core/ajax","core/str","core/templates","tiny_aiplacement/options","tiny_aiplacement/textmark","tiny_aiplacement/generatebase"],(function(_exports,_modal_events,_textmodal,_ajax,_str,_templates,_options,_textmark,_generatebase){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_modal_events=_interopRequireDefault(_modal_events),_textmodal=_interopRequireDefault(_textmodal),_ajax=_interopRequireDefault(_ajax),_templates=_interopRequireDefault(_templates),_textmark=_interopRequireDefault(_textmark),_generatebase=_interopRequireDefault(_generatebase);class GenerateText extends _generatebase.default{constructor(editor){super(editor),_defineProperty(this,"setupModal",(async()=>{const modalObject=await _textmodal.default.create(GenerateText.modalConfig);return(await modalObject.getRoot()).on(_modal_events.default.hidden,(()=>{modalObject.destroy()})),modalObject})),_defineProperty(this,"setupContentModal",(async(modalObject,templateContext)=>{const[loadingBody,textBody,textFooter]=await Promise.all([_templates.default.render("tiny_aiplacement/loading",templateContext),_templates.default.render("tiny_aiplacement/modalbodytext",templateContext),_templates.default.render("tiny_aiplacement/modalfootertext",templateContext)]);modalObject.setBody(loadingBody+textBody),modalObject.setFooter(textFooter),this.addContentEventListeners(modalObject)})),_defineProperty(this,"handleContentModalClick",((e,modalObject,root)=>{const actions={generate:()=>this.handleSubmit(root,e.target),inserter:()=>this.handleInsert(root,modalObject,e.target),cancel:()=>modalObject.destroy()},actionKey=Object.keys(actions).find((key=>e.target.closest('[data-action="'.concat(key,'"]'))));actionKey&&(e.preventDefault(),actions[actionKey]())})),_defineProperty(this,"setupPromptArea",(root=>{const generateBtn=root.querySelector("#".concat(this.editor.id,"_tiny_aiplacement_generatebutton")),promptArea=root.querySelector("#".concat(this.editor.id,"_tiny_aiplacement_textprompt"));promptArea.addEventListener("input",(()=>{generateBtn.disabled=""===promptArea.value.trim()}))})),_defineProperty(this,"handleSubmit",(async(root,submitBtn)=>{await this.displayLoading(root,submitBtn);const request={methodname:"aiplacement_tinymce_generate_text",args:this.getRequestArgs(root)};try{this.responseObj=await _ajax.default.call([request])[0],this.responseObj.error?this.handleGenerationError(root,submitBtn):(await this.displayGeneratedText(root),this.hideLoading(root,submitBtn),window.console.log(this.responseObj))}catch(error){this.handleGenerationError(root,submitBtn)}})),_defineProperty(this,"handleInsert",(async(root,modalObject,submitBtn)=>{await this.displayLoading(root,submitBtn);const generatedResponseDiv=root.querySelector("#"+this.editor.id+"_tiny_aiplacement_textresponse"),wrappedEditedResponse=await _textmark.default.wrapEditedSections(this.responseObj.generatedcontent,generatedResponseDiv.value);this.responseObj.editedtext=this.replaceLineBreaks(wrappedEditedResponse);const formattedResponse=await _templates.default.render("tiny_aiplacement/textinsert",this.responseObj);this.editor.insertContent(formattedResponse),this.editor.execCommand("mceRepaint"),this.editor.windowManager.close(),modalObject.destroy()})),_defineProperty(this,"handleGenerationError",(async(root,submitBtn)=>{const generatedResponseDiv=root.querySelector("#"+this.editor.id+"_tiny_aiplacement_textresponse");generatedResponseDiv.classList.add("alert-danger"),generatedResponseDiv.value=await(0,_str.getString)("errorgentext","tiny_aiplacement"),this.hideLoading(root,submitBtn)})),_defineProperty(this,"displayGeneratedText",(async root=>{root.querySelector('[data-action="inserter"]').classList.remove("hidden");const generatedResponseDiv=root.querySelector("#"+this.editor.id+"_tiny_aiplacement_textresponse");generatedResponseDiv.value=this.responseObj.generatedcontent,generatedResponseDiv.disabled=!1})),_defineProperty(this,"getRequestArgs",(root=>({contextid:(0,_options.getContextId)(this.editor),prompttext:root.querySelector("#".concat(this.editor.id,"_tiny_aiplacement_textprompt")).value}))),_defineProperty(this,"replaceLineBreaks",(text=>{const textWithBreaks=text.replace(/\n{2,}|\r\n/g,"<br/><br/>").replace(/\n/g,"<br/>");return"<p>".concat(textWithBreaks,"</p>")}))}}return _exports.default=GenerateText,_defineProperty(GenerateText,"modalConfig",{type:_textmodal.default.TYPE,xlarge:!0}),_exports.default}));

//# sourceMappingURL=generatetext.min.js.map