define("tiny_aiplacement/commands",["exports","editor_tiny/utils","core/str","./common","./generateimage","./generatetext"],(function(_exports,_utils,_str,_common,_generateimage,_generatetext){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Commands helper for the Moodle tiny_aiplacement plugin.
   *
   * @module      tiny_aiplacement/commands
   * @copyright   2024 Matt Porritt <matt.porritt@moodle.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0,_generateimage=_interopRequireDefault(_generateimage),_generatetext=_interopRequireDefault(_generatetext);_exports.getSetup=async()=>{const[contextMenuIconText,generateImageIconText,generateTextIconText,contextMenuIconImage,generateImageIconImage,generateTextIconImage]=await Promise.all([(0,_str.get_string)("generatecontent",_common.placement),(0,_str.get_string)("generateimage",_common.placement),(0,_str.get_string)("generatetext",_common.placement),(0,_utils.getButtonImage)(_common.contextMenuIcon,_common.component),(0,_utils.getButtonImage)(_common.generateImageIcon,_common.component),(0,_utils.getButtonImage)(_common.generateTextIcon,_common.component)]);return editor=>{editor.ui.registry.addIcon(_common.contextMenuIcon,contextMenuIconImage.html),editor.ui.registry.addIcon(_common.generateImageIcon,generateImageIconImage.html),editor.ui.registry.addIcon(_common.generateTextIcon,generateTextIconImage.html),editor.ui.registry.addMenuButton(_common.contextMenuName,{icon:_common.contextMenuIcon,tooltip:contextMenuIconText,fetch:callback=>callback("".concat(_common.generateImageName," ").concat(_common.generateTextName))}),editor.ui.registry.addMenuItem(_common.generateImageName,{icon:_common.generateImageIcon,text:generateImageIconText,onAction:()=>{new _generateimage.default(editor).displayContentModal(editor)}}),editor.ui.registry.addMenuItem(_common.generateTextName,{icon:_common.generateTextIcon,text:generateTextIconText,onAction:()=>{new _generatetext.default(editor).displayContentModal(editor)}})}}}));

//# sourceMappingURL=commands.min.js.map