{"version":3,"sources":["../src/copy_modal.js"],"names":["define","$","Str","ModalFactory","ModalEvents","ajax","Fragment","Notification","CopyModal","contextid","course","modalObj","spinner","createModal","get_string","then","title","create","type","types","DEFAULT","body","large","done","modal","getRoot","on","processModalForm","e","formredirect","preventDefault","setBody","hide","catch","exception","Error","updateModalBody","formdata","params","JSON","stringify","id","shortname","setTitle","loadFragment","window","console","log","copyform","find","serialize","formjson","invalid","merge","length","first","focus","call","methodname","args","jsonformdata","url","URL","location","redirect","origin","assign","fail","init","context","getAttribute","URLSearchParams","search","courseid","get","response","show"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module provides the course copy modal from the course and\n * category management screen.\n *\n * @module     course\n * @package    core\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.9\n */\n\ndefine(\n  ['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/ajax', 'core/fragment',\n      'core/notification'],\n        function ($, Str, ModalFactory, ModalEvents, ajax, Fragment, Notification) {\n\n            /**\n             * Module level variables.\n             */\n            var CopyModal = {};\n            var contextid;\n            var course;\n            var modalObj;\n            var spinner = '<p class=\"text-center\">'\n                + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>'\n                + '</p>';\n\n            /**\n             * Creates the modal for the course copy form\n             *\n             * @param object Course object.\n             * @private\n             */\n            function createModal() {\n                // Get the Title String.\n                Str.get_string('loading').then(function(title) {\n                    // Create the Modal.\n                    ModalFactory.create({\n                        type: ModalFactory.types.DEFAULT,\n                        title: title,\n                        body: spinner,\n                        large: true\n                    })\n                    .done(function(modal) {\n                        modalObj = modal;\n                        // Explicitly handle form click events.\n                        modalObj.getRoot().on('click', '#id_submitreturn', processModalForm);\n                        modalObj.getRoot().on('click', '#id_submitdisplay', function(e){\n                            e.formredirect = true;\n                            processModalForm(e);\n\n                        });\n                        modalObj.getRoot().on('click','#id_cancel', function(e){\n                            e.preventDefault();\n                            modalObj.setBody(spinner);\n                            modalObj.hide();\n                        });\n                    });\n                }).catch(function() {\n                    Notification.exception(new Error('Failed to load string: loading'));\n                });\n            }\n\n            /**\n             * Updates the body of the modal window.\n             *\n             * @private\n             */\n            function updateModalBody(formdata) {\n                if (typeof formdata === \"undefined\") {\n                    formdata = {};\n                }\n\n                var params = {\n                        'jsonformdata': JSON.stringify(formdata),\n                        'courseid': course.id\n                        };\n\n                modalObj.setBody(spinner);\n                Str.get_string('copycoursetitle', 'backup', course.shortname).then(function(title) {\n                    modalObj.setTitle(title);\n                    modalObj.setBody(Fragment.loadFragment('course', 'new_base_form', contextid, params));\n                }).catch(function() {\n                    Notification.exception(new Error('Failed to load string: copycoursetitle'));\n                });\n            }\n\n            /**\n             * Updates Moodle form with selected information.\n             * @private\n             */\n            function processModalForm(e) {\n                e.preventDefault(); // Stop modal from closing.\n                window.console.log(e.formredirect);\n\n                // Form data.\n                var copyform = modalObj.getRoot().find('form').serialize();\n                var formjson = JSON.stringify(copyform);\n\n                // Handle invalid form fields for better UX.\n                var invalid = $.merge(\n                    modalObj.getRoot().find('[aria-invalid=\"true\"]'),\n                    modalObj.getRoot().find('.error')\n                );\n\n                if (invalid.length) {\n                    invalid.first().focus();\n                    return;\n                }\n\n                // Submit form via ajax.\n                ajax.call([{\n                    methodname: 'core_backup_submit_copy_form',\n                    args: {\n                        jsonformdata: formjson\n                    },\n                }])[0].done(function() {\n                    // For submission succeeded.\n                    modalObj.setBody(spinner);\n                    modalObj.hide();\n\n                    if (e.formredirect == true) {\n                        // We are redirecting to copy progress display.\n                        let url = new URL(window.location);\n                        let redirect = url.origin + \"/backup/copyprogress.php?id=\" + course.id;\n                        window.location.assign(redirect);\n                    }\n\n                }).fail(function() {\n                    // Form submission failed server side, redisplay with errors.\n                    updateModalBody(copyform);\n                });\n            }\n\n            /**\n             * Initialise the class.\n             *\n             * @public\n             */\n            CopyModal.init = function(context) {\n                contextid = context;\n                // Setup the initial Modal.\n                createModal();\n\n                // Setup the click handlers on the copy buttons.\n                $('.action-copy').on('click', function(e) {\n                    e.preventDefault(); // Stop. Hammer time.\n                    let url = new URL(this.getAttribute('href'));\n                    let params = new URLSearchParams(url.search);\n                    let courseid = params.get('id');\n\n                    ajax.call([{ // Get the course information.\n                        methodname: 'core_course_get_courses',\n                        args: {\n                            'options': {'ids' : [courseid]},\n                        },\n                    }])[0].done(function(response) {\n                        // We have the course info get the modal content.\n                        course = response[0];\n                        updateModalBody();\n\n                    }).fail(function() {\n                        Notification.exception(new Error('Failed to load course'));\n                    });\n\n                    modalObj.show();\n                });\n\n            };\n\n            return CopyModal;\n        });"],"file":"copy_modal.min.js"}